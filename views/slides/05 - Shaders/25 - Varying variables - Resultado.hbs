<h1>Varying variables - Resultado</h1>

<canvas id="canvas" width="500" height="400"></canvas>

<script id="vertex-shader" type="x-shader/x-vertex">
  attribute vec3 position;
  attribute vec3 color;
  varying vec3 vColor;

  void main() {
    gl_Position = vec4(position, 1.0);
    vColor = color;
  }
</script>

<script id="fragment-shader" type="x-shader/x-fragment">
  precision mediump float;

  varying vec3 vColor;

  void main() {
    gl_FragColor = vec4(vColor, 1.0);
  }
</script>

<script>
  const canvas = document.getElementById('canvas')
  const gl = canvas.getContext('webgl')

  const vertexShaderSource = document.getElementById('vertex-shader').text
  const fragmentShaderSource = document.getElementById('fragment-shader').text

  // Creating the program
  const program = gl.createProgram()
  const vertexShader = gl.createShader(gl.VERTEX_SHADER)
  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)

  gl.shaderSource(vertexShader, vertexShaderSource)
  gl.shaderSource(fragmentShader, fragmentShaderSource)
  gl.compileShader(vertexShader)
  gl.compileShader(fragmentShader)
  gl.attachShader(program, vertexShader)
  gl.attachShader(program, fragmentShader)
  gl.linkProgram(program)
  gl.useProgram(program)


  // Setting the attribute
  const positionLocation = gl.getAttribLocation(program, 'position')
  const colorLocation = gl.getAttribLocation(program, 'color')

  const buffer = gl.createBuffer()
  const vertices = new Float32Array([
  // x,  y,  z,  r,  g,  b
    -1, -1,  0,  1,  0,  0,
     1, -1,  0,  0,  1,  0,
     0,  1,  0,  0,  0,  1,
  ])
  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)
  gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)

  gl.enableVertexAttribArray(positionLocation)
  gl.vertexAttribPointer(positionLocation, 3, gl.FLOAT, gl.FALSE, 24, 0)

  gl.enableVertexAttribArray(colorLocation)
  gl.vertexAttribPointer(colorLocation, 3, gl.FLOAT, gl.FALSE, 24, 12)

  // Rendering
  gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 6)
</script>
